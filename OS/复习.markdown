[一些零碎的点](https://www.jianshu.com/nb/26980233)

[下面这些问题的参考答案](https://wenku.baidu.com/view/3ba05a69b84ae45c3b358cbb.html)

[川大计算机操作系统串讲复习](https://www.docin.com/p-2084002024.html)

[牛逼的人的总结](https://mp.weixin.qq.com/s/chQbT0qGxp0q_B1NHgaDJw)

[假装是重点](https://wenku.baidu.com/view/251cfdf6a76e58fafbb003c9.html)

# OS概述：

#### 1.操作系统的概念，资源的观点，计算机系统的资源有哪些。

**操作系统定义：**
操作系统是一组控制和管理计算机系统的硬件和软件资源、合理地组织计算机工作流程以及方便用户的程序集合。

从资源管理观点――操作系统是系统资源管理者。

操作系统是资源管理程序，它用于控制和管理计算机系统的硬件和软件资源。

- 计算机系统资源：

  ​      软件资源：信息（数据和程序）
  ​      硬件资源: I／O设备、存储器、处理器

### 2.操作系统提供的接口有2个：命令接口、程序接口(系统调用)。

 一类是作业级接口，它提供一组系统命令（命令行、菜单式、命令脚本式、图形用户接口GUI） ，供用户组织和控制自己的作业运行。
  另一类是程序级接口，它提供一组系统调用，即OS中某个模块功能，供用户程序和其它程序调用（例:MSDOS的int 21h、WINDOWS的API函数等） 。

#### 3.操作系统主要有类型有：实时操作系统、分时操作系统、批处理操作系统、分布式、网络、并行（多机），他们各有何特点？

**实时系统特征：**

- 快速的响应时间
- 有限的交互能力
- 高可靠性
- ~~资源利用率低~~

**分时系统的特征：**

- 多路性
- 独立性
- 交互性
- 及时性

分时系统中，为使多个用户能够同时与系统交互，系统要能够及时地接收多个用户输入，采用时间片轮转法，理论上响应时间=用户数*时间片。

**多道批处理系统的特点：**

优点：

- 资源利用率高：CPU和内存利用率较高；
- 作业吞吐量大：单位时间内完成的工作总量大；

缺点：

- 用户交互性差：整个作业完成后或中间出错时，才与用户交互，不利于调试和修改；
- 作业平均周转时间长：短作业的周转时间显著增长；

**网络操作系统：**

高可靠性、容错性、可扩展性

高效、可靠的网络通信
对网络中共享资源（在LAN中有硬盘、打印机等）有效的管理
提供电子邮件、文件传输、共享硬盘、打印机等服务
网络安全管理
提供互操作能力

**分布式操作系统：**

分布式系统是指把多个处理机通过线路互联而构成的系统，此系统的处理和控制分布在各个处理机上。

主要特点：分布性，自治性，模块性，并行性。

**多处理机系统的特点：**

- 增加系统的吞吐量：N个处理器加速比达不到N倍（额外的调度开销，算法的并行化）
- 提高系统可靠性：故障时系统降级运行

#### 4.多用户、多任务、单用户、单任务操作系统之间的关系：多道系统可能是多用户系统(Unix)，也可能是单用户系统（Windows, DOS）, 单用户系统也可能是多道系统，也可能是单道系统

#### 5.操作系统的特征

- 并发性（Concurrence）

- 共享性（Sharing）

  并发和共享是操作系统的两个最基本的特性，它们又是互为存在条件。

- 虚拟性（Virtual）

- 异步性（Asynchronism）和不确定性（nondeterministic）

### 6.操作系统的功能构成或者说模块构成：处理机管理（进程管理）、内存管理、设备管理，文件管理，作业管理。

- **处理机（进程）管理**

  进程管理包括进程控制、进程同步、进程通信和调度等。

- **存储器的管理**

  存储管理应具有内存分配、内存保护、地址映射和内存扩充等功能。

- **I/O设备管理**

  设备管理应具有缓冲器管理、设备分配、设备处理及虚拟设备等功能。

- **信息管理（文件系统管理）**

  文件系统管理应具有对文件存储空间的管理、目录管理、文件共享和保护等功能。

- **用户接口**

  一种是作业级接口，它提供一组键盘命令，供用户去组织和控制作业的运行。另一种是程序级接口，它提供一组系统调用供其它程序调用。

#### 7.联机操作/联机作业，脱机操作/脱机作业。

**作业可分为：脱机作业和联机作业**

　　脱机作业是指用户不能和计算机直接交互，需要通过操作员从中干预的作业。

　　联机作业是用户通过外围设备直接与计算机系统进行交互，从而控制作业的运行，这种作业也叫交互型作业。

　　联机作业多出现在分时系统中，而脱机作业经常出现在批处理系统中。

#### 8.并发和并行

并发是指两个或多个活动在同意给定的时间间隔中进行；

并行是指两个或多个活动在同一时刻同时执行的情况。

### 9.网络操作系统和分布式操作系统有何不同？从分布性、透明性、健壮性、统一性等方面比较

- 分布性
  处理上的分布性是分布式操作系统的最基本特征。网络虽有分布处理的功能，但网络的控制功能，则大多集中在某个主机或服务器上，它的控制方式集中的，分布式系统的处理分布是资源、功能、任务和控制都是分布的。

- 透明性
      分布操作系统负责全系统的资源分配和调度、任务划分、信息传输协调工作，并为用户提供一个统一的界面，标准的接口，用户通过这一界面实现所需要的操作和使用系统资源。分布式OS通常很好地隐藏系统内部的实现细节，如对象的物理位置、并发控制、系统故障等对用户都是透明的。

- 统一性
      分布式系统要求一个统一的操作系统，实现系统操作的统一性，而网络系统一般是在各自操作系统基础上加上负责网络访问功能模块，网络各系统操作不一致。

- 健壮性
      由于分布式系统的处理和控制功能是分布的，设备出现故障时，可通过容错技术实现系统重构，从而仍保持系统的正常运行，因而系统具有键壮性，即具有较好的可用性和可靠性。而网络系统其控制功能大多集中在主机和服务器中，使系统具有潜在的不可靠性。

  

# 进程管理：

### 1.进程PCB和线程TCB包含哪些内容？

 **PCB的信息：**

- **进程标识符：**它用于唯一地标识一个进程。它有外部标识符（由字母组成，供用户使用）和内部标识符（由整数组成，为方便系统管理而设置）二种。
- **进程调度信息：**它包括进程状态（running、ready、blacked）、队列（就绪、阻塞队列）、队列指针，调度参数：进程优先级、进程已执行时间和已等待时间等。
- **处理机状态信息：**它由处理机各种寄存器（通用寄存器、指令计数器、程序状态字PSW、用户栈指针等）的内容所组成，该类信息使进程被中断后重新执行时能恢复现场从断点处继续运行。
- **进程控制信息：**它包括程序和数据的地址、I／O资源清单，保证进程正常运行的同步和通信机制等。
- **家族信息：**它包括该进程的父、子进程标识符、进程的用户主等。

 **TCB的信息：**

TCB中的主要信息包括线程标识、线程状态、调度参数、现场、链接指针，其中现场信息主要包括通用寄存器、指令计数器PC以及用户栈指针。对于操作系统支持的线程，TCB中还应包含系统栈指针。

### 2.进程调度要进行上下文切换，上下文切换包含哪些内容？（例如，现场信息， 地址空间等）

进程上下文实际上是执行活动全过程的静态描述。

**进程上下文**包括系统中与执行该进程有关的各种**寄存器**（例如：通用寄存器、程序计数器PC、程序状态寄存器PS等）的值，**程序段**在经编译之后形成的机器指令代码集（或称正文段）、**数据集**及各种**堆栈值**和**PCB结构**

网上找的：

进程上下文实际上是进程执行活动全过程的静态描述。我们把已执行过的进程指令和数据在相关寄存器与堆栈中的内容称为上文，把正在执行的指令和数据在寄存器和堆栈中的内容称为正文，把待执行的指令和数据在寄存器与堆栈中的内容称为下文。具体的说，进程上下文包括计算机系统中与执行该进程有关的各种寄存器（例如通用寄存器，程序计数器PC，程序状态字寄存器PS等）的值，程序段在经过编译过后形成的机器指令代码集，数据集及各种堆栈值PCB结构。这里，有关寄存器和栈区的内容是重要的，例如没有程序计数器PC和程序　状态寄存器PS，CPU将无法知道下一条待执行指令的地址和控制有关操作。  

#### 3.抢占调度有哪些形式：时间片，优先级，短进程，非抢占调度相比，抢占调度不但要选取一个就绪进程来运行，同时把现运行进程强制编程就绪状态。

抢占的原则有：时间片原则、优先权原则、短进程优先原则

### 4.产生死锁的主要原因是什么？死锁的4个必要条件（互斥、非抢占、请求和保持、环路）？预防方法（一次性分配、按序分配）有哪些？他们分别是破坏什么条件？死锁避免方法是银行家算法。会用死锁预防的方法解决死锁问题。

**死锁的原因：**

- 竞争资源引起死锁
- 进程推进顺序不当引起死锁

**产生死锁的必要条件：**

- 互斥（ Mutual exclusion ）条件
- 不可抢占（ No preemption ）条件
- 请求和保持（ Hold-and-wait ）条件
- 环路等待（ Circular wait ）条件

预防死锁的方法是破坏四个产生死锁的必要条件之一

1. **破坏互斥条件**
2. **破坏不可抢占条件**
3. **破坏请求和保持条件：**资源静态予分配方式
4. **破坏循环等待条件：**有序资源使用法、资源按级分配法

### 5.掌握银行家算法的使用

#### 6.进程和程序的主要区别有哪些？（动态与静态、进程具有并发性、是资源分配的基本单位，是调度的基本单位，进程有生命特征），程序通过多次执行对应多个进程。即多个进程的程序可能是一样的。

**动态性**：动态性是进程的最基本特征，它是程序执行过程，它是有一定的生命期。它由创建而产生、由调度而执行，因得不到资源而暂仃，并由撤消而死亡。而程序是静态的，它是存放在介质上一组有序指令的集合，无运动的含义。

**并发性**：并发性是进程的重要特征，同时也是OS的重要特征。并发性指多个进程实体同存于内存中，能在一段时间内同时运行。而程序是不能并发执行。

**独立性**：进程是一个能独立运行的基本单位，即是一个独立获得资源和独立调度的单位，而程序不能作为独立单位参加运行、获取资源。

**异步性**：进程按各自独立的不可预知的速度向前推进，即进程按异步方式进行，正是这一特征，将导致程序执行的不可再现性，因此OS必须采用某种措施来限制各进程推进序列以保证各程序间正常协调运行。

**结构特征**：从结构上，进程实体由程序段、数据段和进程控制块三部分组成，UNIX中称为“进程映象”。

**生命特征**：进程有一个生命周期，有一个从创建到消亡的过程，而程序作为一种软件资源可以长期保存。

另外，通过多次执行，一个程序可对应多个进程；通过调用关系，一个进程可包括多个程序。

进程和程序的本质区别是动态和静态特征，引入进程来描述程序的并发执行

#### 7.进程实体由那几个部分组成？ 程序、数据、PCB

进程实体由程序段、数据段和进程控制块三部分组成，UNIX中称为“进程映象”。

程序作用：描述进程要完成的功能。

数据集合作用：程序在执行时所需要的数据和工作区。

程序控制块作用：包含进程的描述信息和控制信息。他是进程存在的唯一标志。

### 8.进程的3个基本状态及其转换，掌握哪些情况下由运行变成阻塞，哪些情况下由运行变成就绪？哪些情况下由阻塞变成就绪？哪些情况下会引起进程调度？

**作业的四个状态：**提交、后备、执行、完成。

从作业输入请求开始到建立JCB表，作业处于提交状态；在建立JCB表之后到被作业调度程序选中进入内存，作业在作业等待队列中处于后备状态；作业进入内存后到执行结束，处于执行状态；作业执行结束到撤消之间，作业处于完成状态。

**进程的三个基本状态**

- 运行态（Running）：当一个进程在处理机上运行时，则称该进程处于运行状态。
- 就绪态（Ready）：一个进程获得了除处理机外的一切所需资源，一旦得到处理机即可运行，则称此进程处于就绪状态。
- 阻塞态（Blocked）：（又称挂起状态、等待状态）：一个进程正在等待某一事件发生（例如请求I／O而等待I／O完成等）而暂时仃止运行，这时即使把处理机分配给进程也无法运行，故称该进程处于阻塞状态。

![1560327105806](C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\1560327105806.png)

**进程状态的转换：**

- **就绪态――＞运行态：**当处理机空闲时，进程调度程序必将处理机分配给一个处于就绪态的进程 ，该进程便由就绪态转换为运行态。
- **运行态――＞阻塞态：**处于运行态的进程在运行过程中需要等待某一事件发生后（例如因I／O请求等待I／O完成后），才能继续运行，则该进程放弃处理机，从运行态转换为阻塞态。
- **阻塞态――＞就绪态：**处于阻塞态的进程，若其等待的事件已经发生，于是进程由阻塞态转换为就绪态。
- **运行态――＞就绪态：**处于运行状态的进程在其运行过程中，因分给它的处理机时间片已用完，而不得不让出（被抢占）处理机，于是进程由运行态转换为就绪态；当系统采用抢占式调度算法时，若有一个优先级比现运行进程高的进程进入就绪状态时，现运行进程也要被迫让出CPU进入就绪状态。
- 而阻塞态――＞运行态和就绪态――＞阻塞态这二种状态转换不可能发生。

![img](https://upload-images.jianshu.io/upload_images/12058546-f5877ca1d74bd2e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/380/format/webp)

**引起进程调度的原因有以下几类：**
（1）正在执行的进程执行完毕。这时，如果不选择新的就绪进程执行，将浪费处理机资源。
（2）执行中进程自己调用阻塞原语将自己阻塞起来进入睡眠等状态。
（3）执行中进程调用了P原语操作，从而因资源不足而被阻塞；或调用了v原语操作激活了等待资源的进程队列。
（4）执行中进程提出I/0请求后被阻塞。
（5）在分时系统中时间片已经用完。
（6）在执行完系统调用等系统程序后返回用户进程时，这时可看作系统进程执行完毕，从而可调度选择一新的用户进程执行。
以上都是在**不可剥夺方式下**的引起进程调度的原因。在CPU执行方式是可剥夺时，还有
（7）就绪队列中的某进程的优先级变得高于当前执行进程的优先级，从而也将引发进程调度。

### 9.信号量值得含义，例如，-5表示什么？ +5表示什么，PV操作，P操作的过程要熟悉。

 信号量的值只能通过两个原子操作：**P、V操作来改变，它代表分配资源和释放资源**。

**信号量的类型：**

- 公用信号量（互斥信号量）
- - mutex .value >＝m ；m>0,表示m个某类资源空闲，可供使用。
        ＝ 0 ；表示资源已被占用，无其它进程等待。
    			 ＝-n ；n>0,表示资源已被占用，还有n个进程因  等待资源而阻塞。
- 专用信号量（同步信号量）

#### 10.原语和临界区的区别？原语不能中断，临界区可以中断，原语可是说是临界区，因为它的效果等同临界区，但临界区不是原语。原语在核心态下执行，而临界区则可以在用户态下执行。文件管理中的原子事务与原语有何不同？

原语是一种特殊的广义指令，它的功能是由系统通过一段不可分割的指令操作来完成，它又称原子操作，原语在核心态下完成。

一次只允许一个进程使用的资源称为临界资源，访问临界资源的那段代码称为临界区。

事务就是指一段不能分割的程序执行，执行的结果应该是完整的，即该段程序要么全部执行产生正常的结果，要么一点也不执行。

事务具有以下4个特性：原子性、一致性、独立性、持久性

#### 11.进程数在状态之间的数量关系（忽略进程切换开销）

？？？？？？？？？？？？？？？？？？？？？？？

#### 12.作业的运行状态和进程的执行状态不一样，作业的运行状态是宏观状态，其实对应的进程有时确实占用CPU运行，有时却在阻塞或就绪状态。

### 13.作业调度算法：先来先服务、短作业优先（照顾短作业，存在饥饿现象）、响应比高者优先（兼顾短作业、先进先出、长作业）、优先级（紧急作业）、多队列（平衡资源的使用），作业调度是1次性调度，不存在动态调度的问题

### 14.进程调度算法：先进先出、短进程优先（照顾短进程）、优先级（用于紧急进程，需要配合抢占调度方式）、时间片轮转法（用于人机交互系统、分时系统）、多级队列调度、多级反馈调度

 **作业／进程调度算法：**

1. **先来先服务First-Come-First-Served （FCFS）（作业／进程）调度算法**

2. **短作业／进程优先(SJF/Shortest Process Next)调度算法**

3. **时间片轮转Round-Robin（RR）调度算法**

4. **高响应比优先 Highest Response Ratio Next (HRRN)(作业)调度算法**

   作业的响应比RP：RP＝（已等待时间＋要求运行时间）／要求运行时间
       ＝1＋已等待时间／要求运行时间。

5. **优先权(Priority)调度算法**

6. **多级队列调度算法**

7. **多级反馈(Feedback)队列调度算法**

### 15.进程通信有哪三种高级通信方式？消息传递又分哪2种？间接通信方式通过信箱这个2传手来交换信件的。

高级通信机制可归结为三大类：共享存储器系统，消息传送系统和管道通信系统。

消息传递系统分为直接通信方式和间接通信方式（信箱）两种

### 16.在支持线程的系统中，资源是以进程为基本单位进行分配，而线程是进行调度的基本单位。

### 17.线程的分类，系统级线程和用户级线程的区别

老师讲的：**用户级线程阻塞操作系统会以为是进程阻塞。**就是下面区别里面的第三点。

**用户线程**指不需要内核支持而在用户程序中实现的线程，其不依赖于操作系统核心，应用进程利用线程库提供创建、同步、调度和管理线程的函数来控制用户线程。不需要用户态/核心态切换，速度快，操作系统内核不知道多线程的存在，因此一个线程阻塞将使得整个进程（包括它的所有线程）阻塞。由于这里的处理器时间片分配是以进程为基本单位，所以每个线程执行的时间相对减少。

**内核线程**：由操作系统内核创建和撤销。内核维护进程及线程的上下文信息以及线程切换。一个内核线程由于I/O操作而阻塞，不会影响其它线程的运行。Windows NT和2000/XP支持内核线程。

**以下是用户级线程和内核级线程的区别：**

**（1）**内核支持线程是OS内核可感知的，而用户级线程是OS内核不可感知的。

**（2）**用户级线程的创建、撤消和调度不需要OS内核的支持，是在语言（如Java）这一级处理的；而内核支持线程的创建、撤消和调度都需OS内核提供支持，而且与进程的创建、撤消和调度大体是相同的。

**（3）**用户级线程执行系统调用指令时将导致其所属进程被中断，而内核支持线程执行系统调用指令时，只导致该线程被中断。

**（4）**在只有用户级线程的系统内，CPU调度还是以进程为单位，处于运行状态的进程中的多个线程，由用户程序控制线程的轮换运行；在有内核支持线程的系统内，CPU调度则以线程为单位，由OS的线程调度程序负责线程的调度。

**（5）**用户级线程的程序实体是运行在用户态下的程序，而内核支持线程的程序实体则是可以运行在任何状态下的程序。

### 18.会使用信号量和PV操作实现互斥、同步、前趋关系（如何实现互斥，如何实现同步，如何实现前趋）

**利用信号量实现进程互斥：**

设置一个互斥信号量mutex,并设其初值为1，然后将各进程的临界区CS置于P（mutex）和V(mutex)操作之间

```pascal
var mutex:=semaphore:=1 ；
begin
parbegin
A:begin                    		B:begin
 Input datd 1 from I/0 1 ； 		Input datd 2 from I/O 2 ；
 Compute……；              		Compute……；
 P(mutex) ；                		P(mutex) ；
 Print results1 by printer; 	Print results2 by printer; 
 V(mutex) ；                		V(mutex) ； 
 end                                      end
parend
end                                            
```

**利用信号量实现进程同步：**

设置一个同步信号量full，它代表的资源是缓冲器满，它的初值为0

设置另一个同步信号量empty，它代表的资源是缓冲器空，它的初值为1 

```pascal
var: empty,full:semaphore:=1,0 ；
 begin
  parbegin
   C: begin
       repeat
        Compute next number ；
        P(empty) ；
        Add to buffer ；
        V(full) ；
       until false 
      end
  P: begin
      repeat
       P(full) ；
       Take from Buffer ；
       V(empty) ；
   Print last number ；
     until false
    end
 parend
end
```

**利用信号量描述前驱关系：**

设置同步信号量full，它为后继进程P拥有，初值为0

```pascal
var full : semaphore: =0;
begin
 parbegin
   C: begin Compute ； V(full) ；end
   P: begin P(full) ； Print ；  end
 parend
end
```

# 存储管理：

#### 1.要掌握动态分区的移动合并。

？？？？？？？？？？？？？？？？？？？？？？？？？？？？

**分区分配算法(Partitioning Placement Algorithm)**

- **最佳适应算法（Best Fit）：**它从全部空闲区中找出能满足作业要求的、且大小最小的空闲分区，这种方法能使碎片尽量小。为适应这种算法，空闲分区表（空闲区链）中的空闲分区要按大小从小到大进行排序，自表头开始查找到第一个满足要求的自由分区分配。
- **首次适应算法（First Fit）：**从空闲分区表的第一个表目起查找该表，把最先能够满足要求的空闲区分配给作业，这种方法目的在于减少查找时间。为适应这种算法，空闲分区表（空闲区链）中的空闲分区要按地址由低到高进行排序。
- **循环首次适应算法：**该算法是首次适应算法的变种。在分配内存空间时，不再每次从表头（链首）开始查找，而是从上次找到的空闲区的下一个空闲区开始查找，直到找到第一个能满足要求的的空闲区为止，并从中划出一块与请求大小相等的内存空间分配给作业。该算法能使内存中的空闲区分布得比较均匀。
- **最坏适应法：**从所有未分配的分区中挑选最大的且大于和等于作业大小的分区分给要求的作业；空闲分区按大小由大到小排序。

**UNIX分配回收算法**（采用空闲分区表结构和首次适应算法）

**动态重定位分区分配**

它们的空闲区表项是按什么规则排列（空闲链表）。

### 2.要会页面置换算法：最佳、LRU、先进先出、NRU等。

**最佳置换算法的基本思想：**发生缺页时，有些页面在内存中，其中有一页将很快被访问（也包含紧接着的下一条指令的那页），而其他页面则可能要到10、100或者1000条指令后才会被访问，每个页面都可以用在该页面首次被访问前所要执行的指令数进行标记。

**LRU置换算法：**最近最少使用页面置换算法。LRU置换算法是选择最近最久未使用的额页面予以淘汰，该算法赋予每个页面一个访问字段，用来记录一个页面自上次被访问以来所经历的时间t，当须淘汰一个页面时可选择现有页面中t值最大的，即最近最久未使用的页面予以淘汰。

**先进先出置换算法：**该算法总是淘汰最先进入内存的页面，即选择在内存中驻留时间最久的页面予以淘汰。该算法的实现，只需一个进程已经调入内存的页面，按先后次序链接成一个队列，并设置一个制造，称为替换指针，使它总是指向最老的页面。

**NRU置换算法：**LRU算法的近似方法，选择在最近一段时间里未被访问过的页面予以淘汰

#### 3.地址重定位的概念？有几种定位方式，结合内存管理方法，说明采用哪种地址重定位方式。分页、分段、段页式、可重定位动态分区等采用动态地址重定位，固定分区、动态分区一般采用静态地址重定位

要把它装入内存执行，就要确定装入内存的实际物理地址，并修改程序中与地址有关的代码，把逻辑地址变换为物理地址，这个过程称为**地址重定位**。 

静态重定位、动态重定位

### 4.会计算逻辑地址到物理地址，特别是分页、分段。逻辑地址到物理地址的转变，页表大小跟逻辑地址有关，跟物理地址无关。

**分页计算：**当进程要访问某个逻辑地址中的数据时，分页地址变换机构会自动地将有效地址分页号和页内地址两部分，再以页号为索引去检索页表。在执行检索之前，先将页号与页表长度进行比较，如果页号大于或等于页表长度，则表示本次所访问的地址已经超越进程的地址空间，则产生一地址越界中断，若未越界，则将页表始址与页号和页表项长度的乘积相加，便得到该表项在页表中的位置，于是可以从中得到该页的物理块号，将之装入物理地址寄存器中，于此同时，再将有效地址寄存器中的页内地址送入物理地址寄存器的块内地址字段中，这样便完成率从逻辑地址到物理地址的变换。

计算方法：物理地址（PA)=页号×页长+页内地址

**分段计算：**在进行地址变缓是，系统将逻辑地址中的段号与段表长度TL进行比较，若S>TL，表示段号太大，访问越界，产生越界中断信号；若未越界，则根据段表的始址和段号，计算出该段对应段表项的位置，从中读出该段在内存的起始地址，然后检查段内地址d是否超过该段的段长SL。若dSL，产生越界中断，若未越界，则将该段的地址与段内地址d相加，即可得到要访问的物理地址。

计算方法；物理地址=段号×段表长度+段内地址

#### 5.页和段的区别

1、页是信息的物理单位，分页是为实现离散分配方式，以消减内存的外零头，提高内存的利用率；或者说，分页仅仅是由于系统管理的需要，而不是用户的需要。
段是信息的逻辑单位，它含有一组其意义相对完整的信息。分段的目的是为了能更好的满足用户的需要。
2、页的大小固定且由系统确定，把逻辑地址划分为页号和页内地址两部分，是由机器硬件实现的，因而一个系统只能有一种大小的页面。
段的长度却不固定，决定于用户所编写的程序，最常由编辑程序在对源程序进行编辑时，根据信息的性质来划分。
3.分页的作业地址空间是维一的，即单一的线性空间，程序员只须利用一个记忆符，即可表示一地址。
分段的作业地址空间是二维的，程序员在标识一个地址时，既需给出段名，又需给出段内地址

### 6.抖动现象，是请求分页（分页虚拟）或请求分段（分段虚拟）、或请求段页式（段页式虚拟）中页面或段频繁调进调出的现象

页面频繁调进调出，以致一个进程在运行中把大部分时间花费在完成页面置换的工作上，我们称该进程发生了**“抖动”**

#### 7.段的逻辑地址是2维地址，物理地址是1维的

#### 8.段表、页表中增加了哪些项以便实现虚拟存储？例如， 状态位，访问位，修改位，外存地址

分页系统：增加了请求调页功能和页面置换功能所形成的也是虚拟存储系统。
分段系统：增加了请求调段及分段置换功能后所形成的段式虚拟存储系统。

### 9.动态分区的分配算法：首次适应算法，循环首次适应算法，最佳适应算法，最坏适应算法。要会分区的移动合并操作

**分区分配算法(Partitioning Placement Algorithm)**

- **最佳适应算法（Best Fit）：**它从全部空闲区中找出能满足作业要求的、且大小最小的空闲分区，这种方法能使碎片尽量小。为适应这种算法，空闲分区表（空闲区链）中的空闲分区要按大小从小到大进行排序，自表头开始查找到第一个满足要求的自由分区分配。
- **首次适应算法（First Fit）：**从空闲分区表的第一个表目起查找该表，把最先能够满足要求的空闲区分配给作业，这种方法目的在于减少查找时间。为适应这种算法，空闲分区表（空闲区链）中的空闲分区要按地址由低到高进行排序。
- **循环首次适应算法：**该算法是首次适应算法的变种。在分配内存空间时，不再每次从表头（链首）开始查找，而是从上次找到的空闲区的下一个空闲区开始查找，直到找到第一个能满足要求的的空闲区为止，并从中划出一块与请求大小相等的内存空间分配给作业。该算法能使内存中的空闲区分布得比较均匀。
- **最坏适应法：**从所有未分配的分区中挑选最大的且大于和等于作业大小的分区分给要求的作业；空闲分区按大小由大到小排序。

### 10.会计算平均访存时间（快表TLB、页表、缺页中断）

平均访问时间TA
	TA=TA1+(1-H)TM
	或TA=TA1+F TM
	TA1——命中时间
	TM——失效开销
CPU访存命中时，访问时间即为TA1。不命中时，在两级存储层次中，访问的字不在M1中，就必须从M2中把所请求的信息送入Ml，传送时间为TB，则
访问时间是TA2+TB+TA1=TA1+TM。
平均访存时间=命中时间+失效率×失效开销
$$
平均周转时间T = 1/n× [\sum_{i=1}^n{T_i}]
$$

$$
平均带权周转时间  W = 1/n×[\sum_{i=1}^n{T_i/Tsi}]
$$

$$
一个作业的带权周转时间Wi=Ti/Tsi（作业的周转时间Ti/实际服务时间Tsi）
$$

#### 11.分页和分段的区别，见课件

**分页和分段比较：**

|                    | 分页                                                         | 分段                                                         |
| ------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |
| 目的               | 为了提高内存的利用率                                         | 为了更好的满足用户的需要                                     |
| 页/段单位划分      | 页是信息的物理单位，页的大小是固定的，而且由系统确定         | 段是信息的逻辑单位，它含有一组意义相对完整的信息。段的长度是不固定的，由用户确定 |
| 作业地址空间       | 单一的线性地址空间                                           | 二维的，标识一个地址需给出段名和段内地址                     |
| 内存分配           | 以页架为单位离散分配，无外碎片，所以也无紧缩问题             | 以段位单位离散分配，类同可变分区，会产生许多分散的小自由分区——外碎片，造成主存利用率低，需采用紧缩解决碎片问题，但紧缩需化时机 |
| 共享和存取访问控制 | 在同一页面中包含共享的程序和私用的数据，使共享和存取访问控制困难 | 便于共享段逻辑上完整信息共享有价值，提高主存利用率；便于控制存取访问，段使逻辑上完整信息可根据各段信息决定存取访问权 |
| 动态连接           | 不能动态连接                                                 | 提供动态连接的便利，运行中不用的模块可以不连接调入，节省内存空间 |
| 动态增长           | 不能动态增长                                                 | 便于处理变化的数据结构，可动态增长                           |

#### 12.请求分页的页表与普通页表有何不同，每一位的含义或作用是什么？

？？？？？？？？？？？？？？？？？？？？？？？？

a.在请求分页系统中,其页表项中包含的数据项有页号,物理块号,状态位P,访问字段A,修改位M和
---外存地址；
b.其中状态位P指示该页是否调入内存,供程序访问时参考；
c.访问字段A用于记录本页在一段时间内被访问的次数,或最近已有多长时间未被访问,提供给置换算法---选择换出页面时参考；
d.修改位M表示该页在调入内存后是否被修改过；
e.外存地址用于指出该页在外存上的地址,通常是物理块号,供调入该页时使用

系统为每个进程创建了一个页表。在进程逻辑地址空间中的每一页，依次在页表中有一个表项，记录了该页对应的物理块号。

在配置了页表之后，通过查找页表就可以很容易地找到该页在内存中的位置。页表具有逻辑地址到物理地址映射的作用。

​    对于页的保护通常设置一个存取控制字段。当这个字段占一位时，用于规定该页中的内容允许写还是读；如果存取控制字段占两位，那么它可以表示存取控制为读写、只读和只运行三种。当进程写一个只读页时，系统就会通过中断来报错。

#### 13.虚拟存储管理中的管理算法实际上是牺牲时间性能换取内存空间性能。

#### 14.内存管理方法中哪些是主要为了提高内存利用率而提出的？哪些主要是为了编程和共享提出来的？

分区管理、页式管理、段式管理、段页式管理

**页式存储管理**较好地解决了内存碎片问题，提高了内存储器的利用率。

**段式存储管理**满足用户在编程和使用上的要求。

# 设备管理：

### 1.I/O控制方式有：程序轮询、中断、DMA、通道，有何特点？

1、程序查询方式

  程序查询方式也称为程序轮询方式，该方式采用用户程序直接控制主机与外部设备之间输入/输出操作。CPU必须不停地循环测试I/O设备的状态端口，当发现设备处于准备好(Ready)状态时，CPU就可以与I/O设备进行数据存取操作。这种方式下的CPU与I/O设备是串行工作的，输入/输出一般以字节或字为单位进行。这个方式频繁地测试I/O设备，I/O设备的速度相对来说又很慢，极大地降低了CPU的处理效率，并且仅仅依靠测试设备状态位来进行数据传送，不能及时发现传输中的硬件错误。但是这种方式的过程很简单，易理解，并且不需要额外硬件。

**优点**：过程简单。

**缺点**：CPU利用率相当底。由于CPU速度远远快于I/O设备，致使绝大部分时间都在测试I/O设备是否已经完成数据传输，从而造成CPU的极大浪费。

2、中断方式

  当I/O设备结束(完成、特殊或异常)时，就会向CPU发出中断请求信号，CPU收到信号就可以采取相应措施。当某个进程要启动某个设备时，CPU就向相应的设备控制器发出一条设备I/O启动指令，然后CPU又返回做原来的工作。CPU与I/O设备可以并行工作，与程序查询方式相比，大大提高了CPU的利用率。但是在中断方式下，同程序查询方式一样，也是以字节或字为单位进行。但是该方法大大降低了CPU的效率，因为当中断发生的非常频繁的时候，系统需要进行频繁的中断源识别、保护现场、中断处理、恢复现场。这种方法对于以“块”为存取单位的块设备，效率是低下的。

**优点**：有了中断硬件的支持后，CPU与I/O设备之间可以并行工作，CPU只需要收到中断后处理即可，大大提高了CPU利用率。

**缺点**：如果每台设备每输入/输出一个数据，都要求中断CPU，这样在一次数据传送过程中的中断次数太多，从而耗费大量CPU时间。

3、DMA(直接内存存取)方式

  DMA方式也称为直接主存存取方式，其思想是：允许主存储器和I/O设备之间通过“DMA控制器(DMAC)”直接进行批量数据交换，除了在数据传输开始和结束时，整个过程无须CPU的干预。每传输一个“块”数据只需要占用一个主存周期。

**优点**：设备和CPU可以并行工作，同时设备与内存的数据交换速度更快，并且不需要CPU干预。

**缺点**：数据传送的方向、存放输入数据的内存起始地址及传送数据的长度等都由CPU控制，并且每台设备都需要一个DMA控制器，当设备增加时，多个DMA控制器的使用也不经济。

4、I/O通道控制方式

  通道(Channel)也称为外围设备处理器、输入输出处理机，是相对于CPU而言的。是一个处理器。也能执行指令和由指令的程序，只不过通道执行的指令是与外部设备相关的指令。是一种实现主存与I/O设备进行直接数据交换的控制方式，与DMA控制方式相比，通道所需要的CPU控制更少，一个通道可以控制多个设备，并且能够一次进行多个不连续的数据块的存取交换，从而大大提高了计算机系统效率。

**优点**：解决了I/O操作的独立性和各部件工作的并行性。不仅能实现CPU与通道的并行操作，而且通道与通道之间也能实现并行操作，各个通道上的外设也能实现并行操作，从而提高了整个系统效率。

**缺点**：需要更多硬件（通道处理器），成本较高，常用于大型数据交互的场合。

### 2.常见的字符设备有哪些？块设备有哪些？

I/O设备

1）块设备

也称为存储设备，是计算机中用来存储信息的主要设备。如磁盘，磁带，光盘等。对于磁盘每个盘快的大小是512B-1KB之间。

2）字符设备

也称为I/O设备，用于数据的输入和输出。如打印机，显示终端，键盘以及鼠标等。字符设备属于无结构设备，基本特征是不可寻址，传输速度低。字符设备在输入输出时常采用中断方式。

#### 3.缓冲技术的作用是什么？提高CPU与I/O并行程度，缓解CPU 与I/O速度不匹配的问题。

### 4.Spooling系统的组成（输入进程、输出进程；输入井、输出井；输入缓冲区、输出缓冲区），原理，打印机就是一个用该技术实现虚拟设备的典型例子

**SPOOLing系统的组成：**

- 输入井和输出井
- 输入缓冲区和输出缓冲区
- 输入进程SPi和输出进程SPo

当多道程序程序技术出现后，就可以利用一道程序，来模拟脱机输入时的外围控制机的功能，即把低速I/O设备上的数据传送到高速的磁盘上；再用另一道程序来模拟脱机输出时外围控制机的功能，即把数据从磁盘传送到低速I/O设备上。这样，便在主机的直接控制下，实现脱机输入、输出功能。

共享打印机

#### 5.通道的类型：字节多路通道、数组多路通道、数组选择通道，各有何特点，那些可以共享，那些只能独占。

**通道分成以下三种类型：**

- 字节多路通道
- 数组选择通道
- 数组多路通道

### 6.在主机系统中，分配设备的同时，还要分配与之相连的控制器和通道。

### 7.磁盘的访问时间构成，掌握驱动调度?

### 重点掌握电梯算法、最短寻道时间优先算法（SSTF）、先来先服务（FIFO）、循环扫描法。

### 注意：最短寻道时间优先算法存在饥饿现象。

**磁盘访问时间由以下3部分构成：**

- 寻道时间Ts：磁头从当前位置移到要读写磁道上所需要的时间
- 旋转延迟时间Tr：要读写的扇区旋转到磁头下所经过的时间
- 传输时间Tt：把数据读出或写入磁盘所经过的时间

**磁盘调度算法：**

- **SCAN算法：**该算法不仅考虑到欲访问的磁道与当前磁道间的距离，更优先考虑的是磁头当前的移动方向。例如，当磁头正在自里向外移动时，SCAN算法所考虑的下一个访问对象，应是其欲访问的磁道既在当前磁道之外，又是距离最近的。这样自里向外地访问，直至再无更外的磁道需要访问时，才将磁臂换向为自外向里移动。这时，同样也是每次选择这样的进程来调度，即要访问的磁道在当前位置内距离最近者，这样，磁头又逐步地从外向里移动，直至再无更里面的磁道要访问，从而避免了出现“饥饿”现象。由于在这种算法中磁头移动的规律颇似电梯的运行，因而又常称之为电梯调度算法。
- **最短寻道时间优先算法（SSTF）：**该算法选择这样的进程：其要求访问的磁道与当前磁头所在的磁道距离最近，以使每次的寻道时间最短。但这种算法不能保证平均寻道时间最短。SSTF算法的平均每次磁头移动距离明显低于FCFS的距离，因而SSTF较之FCFS有更好的寻道性能，故过去曾一度被广泛采用。
- **先来先服务算法（FCFS）：**这是一种最简单的磁盘调度算法。它根据进程请求访问磁盘的先后次序进行调度。此算法的优点是公平、简单，且每个进程的请求都能依次地得到处理，不会出现某一进程的请求长期得不到满足的情况。（其平均寻道距离较大。)

#### 8.设备独立性的含义

用户程序不直接使用物理设备名（或设备的物理地址），而只能使用逻辑设备名；而系统在实际执行时，将逻辑设备名转换为某个具体的物理设备名，实施I/O操作

### 9.设备分配过程, 设备分配考虑的因素。

### 磁带、磁盘需要分配吗？在通道系统中，

### 分配设备的时候需要分配相关的控制器和通道。

### 需掌握单通路的设备分配过程。

为了使系统有条不素地工作，系统在分配设备时，应考虑这样几个因素：

①设备的固有属性；②设备分配算法；③设备分配时的安全性；④设备独立性

步骤如下：

1、分配设备；

2、分配设备控制器；

3、分配通道；

在分配时，如遇到对应设备忙的情况，则将进程插入到对应的等待队列中。

![img](file:///C:\Users\lenovo\AppData\Roaming\Tencent\Users\824245227\QQ\WinTemp\RichOle\Q[PTT0WHAN2LRS5LXUYQTGW.png)

### 10.设备管理中，缓冲区管理实际上就是牺牲内存空间来换取时间效率。



# 文件管理：

### 1.磁带上的文件只能是连续结构的文件，也只能顺序存取，不支持直接存取（随机存取）

### 2.外存空间的管理方法有哪些？

### 空闲表、空闲链表、位示图、成组链接法，会使用这些方法处理具体的分配问题。

空闲表法/空白文件目录法

 空闲链表法

位示图法

 成组链接法

### 3.物理结构（连续、链接、索引）、逻辑结构（字符流式文件，记录文件），它们对存取方式有何影响？

文件的物理结构：又称为文件的存储结构，是指文件在外存上的存储组织形式。这不仅与存储介质的存储性能有关，而且与所采用的外存分配方式有关。
物理结构的形式：①连续文件结构②串联文件结构③索引文件结构④散列文件结构.

文件的逻辑结构：是从用户观点出发所观察到的文件组织形式，是用户可以直接处理的数据及其结构，它独立于文件的物理特性，又称为文件组织。

逻辑结构可分为两大类：1.有结构文件。2.无结构文件。
逻辑结构有两种形式：①记录式文件(有结构式文件).②字符流式文件（无结构式文件）,也称流式文件.

------

面向用户从使用角度确定的文件结构称为文件的逻辑结构；

文件系统从文件的存储和检索的角度，在存储介质上的文件组织方式称为文件的物理结构。

文件的逻辑结构离不开文件的实际物理结构，同时又与文件的存取方法有关。  

### 4.外存空间大小=物理块(簇)大小 * 物理块的数量。

#### 5.目录项（文件控制块）实现按名存取主要是通过目录这个数据结构来实现

### 6.文件共享方式有哪几种？如何实现？为什么基于索引节点的文件共享不能跨越文件系统？

**最常用的两种文件共享方法：**

1.基于索引节点的共享方式（文件硬连接）
2.利用符号链实现文件共享。

基于符号链的文件共享是建立一种特殊的链接文件，内容为需要共享的文件的路径和名字，访间该文件时，根据路径找到共享的文件。

基于索引节点的文件共享访问速度快，但可能使索引节点指针悬空：基于符号链的文件共享安全，但访问速度慢，要占用索引节点。

文件硬连接不利于文件主删除它拥有的文件，因为文件主要删除它拥有的共享文件，必须首先删除（关闭）所有的硬莲接否则就会造成共享该文件的用户的目录表目指针悬空。



基于索引节点的文件共享是在文件的目录中填上需要共享文件的索引节点的序号，在索引节点中加上用户计数。

### 7.建立索引节点的好处是什么？加快文件或目录检索的速度，其次是方便文件共享

#### 8.多级目录、工作目录、相对路径的好处：加快文件或目录检索的速度。多级目录还有另外的好处：允许文件重名。

#### 9.文件的分类，文件系统的功能，常见的文件系统由哪些？文件操作有哪些？打开文件和关闭文件应该要做哪些工作？

文件系统一般按性质，用途，组织形式，文件中的信息流向或文件的保护级别等分类：按文件的性质与用途可以分为系统文件，库文件和用户文件。按文件的组织形式可以分为普通文件，目录文件和特殊文件。按文件中的信息流向可以分为输入文件，输出文件和输入/输出文件。按文件的保护级别可以分为只读文件，读写文件，可执行文件和不保护文件。

为方便用户使用文件，文件系统提供对文件的各种系统调用或命令：**建立文件、打开文件、读文件、写文件、关闭文件和删除文件**。

**打开文件：open(文件名**）
主要工作：
读入文件目录，并找到该文件的目录项（文件控制块）核对用户口令，若与目录项中一致则允许打开找出文件的外存位置，作为当前位置给该文件做打开标志。

**关闭文件：close(文件名）**
该命令的主要功能是：释放该文件在内存活动文件目录表里所占据的位置，用户在使用完一个文件后，应该及时将它关闭。

#### 10.文件逻辑结构、文件物理结构和文件存储设备对文件存取方法的影响（直接存取还是顺序存取）。

文件的存取方法密切依赖于文件存储器的特性和物理结构。常用的文件存储器有磁带和磁盘。磁带属于顺序存储设备，适合构造连续结构文件，相应的存取法通常是顺序存取法。磁盘属于直接存储设备，各种物理结构都可采用：如果采用顺序存取法，几种物理结构都可以存钱；如果采用直接存取法，则索引文件效率最高，连续文件效率居中，串联文件效率最低。

存储设备、文件结构存取方法之间的关系

![img](file:///C:\Users\lenovo\AppData\Roaming\Tencent\Users\824245227\QQ\WinTemp\RichOle\RNH7$HAKLNC2WO$81DB6SEH.png)

> 顺序文件适合一次对大量数据的存取，能存储在磁带上。对于磁盘上的定长记录顺序文件，可以实现直接存取。

### 11.根据文件的物理结构、物理块的大小信息确定文件分配外存空间，会计算文件实际占用外存大小，反过来，通过设定最大文件，计算索引结构的索引层次等。

### 12.RAID。

RAID称作廉价磁盘冗余阵列，即利用一台磁盘阵列控制起来统一管理和控制一组磁盘驱动器（几台到几十台），组成一个高可靠性、快速大容量的磁盘系统。

采用RAID技术可以获取更高的可靠性和更快的数据传输速率，而不是价格上更便宜。

### 13.物理结构（连续、链接、索引）各有何优缺点？适合哪种设备？支持哪些存取方式（顺序存取，直接存取）？

- 连续分配

优点：便于顺序访问

 		 顺序访问速度快

缺点：要求连续的存储空间

​       	 不便于文件的动态增长

- 链接分配

优点：解决了文件动态增长的问题。

缺点：只解决了文件的顺序访问，随机访问是低效的。

​			指针占用存储空间

- 索引分配

对于索引分配，每个文件都有一个索引块，索引块是一个表，其中存放了文件所占用的盘块号。

优点：文件可动态增长，可随机访问。

缺点：增加了系统存储空间的开销。

一级  索引盘大小是 1KB 每个盘块是4B 可放1024/4=256个盘块号。

二级 256*256个盘块号 可放256*256*1=64MB数据

- 位示图

位示图是利用二进制的一位来表示磁盘中的一个盘块的使用情况。当其值为“0”时，表示对应的盘块空闲；为“1”时，表示已经分配。有的系统把"0"作为盘块已分配的标记，把“1”作为空闲标志。(它们的本质上是相同的，都是用一位的两种状态标志空闲和已分配两种情况。)磁盘上的所有盘块都有一个二进制位与之对应，这样，由所有盘块所对应的位构成一个集合，称为位示图。

所需的存储容量是  磁盘大小/（8*磁盘块的大小）

（第10点的）文件的存取方法密切依赖于文件存储器的特性和物理结构。常用的文件存储器有磁带和磁盘。磁带属于顺序存储设备，适合构造连续结构文件，相应的存取法通常是顺序存取法。磁盘属于直接存储设备，各种物理结构都可采用：如果采用顺序存取法，几种物理结构都可以存钱；如果采用直接存取法，则索引文件效率最高，连续文件效率居中，串联文件效率最低。

### 14.提高文件操作（查找，读写）的速度有哪些措施：目录、多级目录、索引节点、工作目录、相对路径；连续存储结构、磁盘I/O驱动调度、RAID。Windows的磁盘碎片整理是属于哪一种措施。

在Windows系统中的磁盘碎片整理程序可以分析本地卷，使每个文件或文件夹占用卷上连续的磁盘空间，合并卷上的可用空间使其成为连续的空闲区域。这样，系统就可以更有效地访问文件或文件夹，以及更有效地保存新的文件和文件夹。通过合并文件和文件夹，磁盘碎片整理程序还将合并卷上的可利用空间，减少新文件出现碎片的可能性。合并文件和文件夹碎片的过程称为碎片整理。
